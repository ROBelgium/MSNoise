name: Full test suite

on: [push]

jobs:
  run_tests:
    runs-on: ${{ matrix.os }}
    if: |
      !contains(github.event.head_commit.message, '+ONLYDOCS') &&
      !contains(github.event.head_commit.message, '+NOFULLTEST')
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/anaconda-client-env

          - os: macos-latest
            label: osx-64
            prefix: /Users/runner/miniconda3/envs/anaconda-client-env

          - os: windows-latest
            label: win-64
            prefix: C:\Miniconda3\envs\anaconda-client-env

    steps:
      - uses: actions/checkout@v2
      - name: Setup Mambaforge
          uses: conda-incubator/setup-miniconda@v2
          with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: test
            use-mamba: true
            python-version: ${{ matrix.python-version }}

      - name: Set cache date
          run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

            - uses: actions/cache@v2
              with:
                path: ${{ matrix.prefix }}
                key: ${{ matrix.label }}-conda-py${{ matrix.python-version }}-${{ hashFiles('.github/environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
              env:
                # Increase this value to reset cache if etc/example-environment.yml has not changed
                CACHE_NUMBER: 0
              id: cache

      - name: Update environment
        run: mamba env update -n anaconda-client-env -f .github/environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: print package info
        shell: bash -l {0}
        run: |
          conda info -a
          conda list

      - name: Install MSNoise
        shell: bash -l {0}
        run: |
          pip install -e .

      - name: Test suite
        shell: bash -l {0}
        run: |
          msnoise test
