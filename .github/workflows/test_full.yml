name: Full test suite

on: [push]

jobs:
  run_tests:
    runs-on: ${{ matrix.os }}
    if: |
      !contains(github.event.head_commit.message, '+ONLYDOCS') &&
      !contains(github.event.head_commit.message, '+NOFULLTEST')
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('.github/environment.yml') }}-py${{
            matrix.python-version }}

#      - uses: conda-incubator/setup-miniconda@v2
#        with:
#          activate-environment: anaconda-client-env
#          channel-priority: strict
#          environment-file: etc/example-environment-caching.yml
#          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: 'latest'
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          environment-file: .github/environment.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: print package info
        shell: bash -l {0}
        run: |
          conda info -a
          conda list

      - name: Install MSNoise
        shell: bash -l {0}
        run: |
          pip install -e .

      - name: Test suite
        shell: bash -l {0}
        run: |
          msnoise test
